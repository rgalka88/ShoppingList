apply plugin: 'com.android.application'

project.ext {
    supportLibraryVersion = "25.4.0"
    daggerVersion = "2.11"
    butterKnifeVersion = "8.5.1"
    rxJavaVersion = "2.1.0"
    rxAndroidVersion = "2.0.1"
    timberVersion = "4.5.1"
    lifecycleVersion = "1.0.0-alpha3"
    firebaseVersion="11.0.2"
    multiDexVersion = "1.0.1"
    guavaVersion = "20.0"
    supportDesignVersion = "25.4.0"
    seismicVersion = "1.0.2"
    junitVersion = "4.12"
    mockitoVersion = "2.7.22"
    javaHamcrestVersion = "2.0.0.0"
    powerMockVersion = "1.7.0RC4"
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.jshvarts.shoppinglist"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        multiDexEnabled true
    }
    buildTypes {
        debug {
            //applicationIdSuffix = ".debug"
            testCoverageEnabled = true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

apply from: "$rootDir/config/jacoco.gradle"

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$project.supportLibraryVersion"

    compile "com.android.support:multidex:$project.multiDexVersion"

    // Dagger core
    annotationProcessor "com.google.dagger:dagger-compiler:$project.daggerVersion"
    compile "com.google.dagger:dagger:$project.daggerVersion"

    // Dagger Android
    annotationProcessor "com.google.dagger:dagger-android-processor:$project.daggerVersion"
    compile "com.google.dagger:dagger-android-support:$project.daggerVersion"
    // if you are not using support library, include this instead
    compile "com.google.dagger:dagger-android:$project.daggerVersion"

    // ButterKnife
    compile "com.jakewharton:butterknife:$project.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$project.butterKnifeVersion"

    // ReactiveX
    compile "io.reactivex.rxjava2:rxjava:$project.rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$project.rxAndroidVersion"

    // Timber
    compile "com.jakewharton.timber:timber:$project.timberVersion"

    // Lifecycle
    compile "android.arch.lifecycle:runtime:$project.lifecycleVersion"
    compile "android.arch.lifecycle:extensions:$project.lifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$project.lifecycleVersion"

    // Firebase
    implementation "com.google.firebase:firebase-database:$project.firebaseVersion"

    //Firebase Auth with Google acct
    //compile "com.google.firebase:firebase-auth:$project.firebaseVersion"
    //compile "com.google.android.gms:play-services-auth:$project.firebaseVersion"

    // Guava
    compile "com.google.guava:guava:$project.guavaVersion"

    // Support Design
    compile "com.android.support:design:$project.supportDesignVersion"

    // CardView
    compile "com.android.support:cardview-v7:$project.supportLibraryVersion"

    // RecyclerView
    compile "com.android.support:recyclerview-v7:$project.supportLibraryVersion"

    // Seismic, device shake detection
    compile "com.squareup:seismic:$project.seismicVersion"

    // JUnit
    testCompile "junit:junit:$project.junitVersion"

    // Mockito
    testCompile "org.mockito:mockito-core:$project.mockitoVersion"

    // Hamcrest
    testCompile "org.hamcrest:java-hamcrest:$project.javaHamcrestVersion"

    // PowerMock
    testCompile "org.powermock:powermock-core:$project.powerMockVersion"

    // AutoFitTextView
    compile 'me.grantland:autofittextview:0.2.+'
}

apply plugin: 'com.google.gms.google-services'
